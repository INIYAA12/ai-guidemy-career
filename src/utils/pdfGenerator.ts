import jsPDF from 'jspdf';
import { CareerProfile, CareerRecommendation, SkillRoadmapWeek } from '@/types/career';

interface PDFData {
  profile: CareerProfile;
  recommendations: CareerRecommendation[];
  roadmap: SkillRoadmapWeek[];
}

export const generatePDF = (data: PDFData) => {
  const doc = new jsPDF();
  let yPosition = 20;
  
  // Helper function to add text with word wrapping
  const addWrappedText = (text: string, x: number, y: number, maxWidth: number, fontSize = 12) => {
    doc.setFontSize(fontSize);
    const splitText = doc.splitTextToSize(text, maxWidth);
    doc.text(splitText, x, y);
    return y + (splitText.length * (fontSize * 0.4));
  };

  // Header
  doc.setFillColor(30, 144, 255);
  doc.rect(0, 0, 210, 30, 'F');
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(24);
  doc.text('AI Career Advisor Report', 20, 20);
  
  yPosition = 40;
  doc.setTextColor(0, 0, 0);

  // Profile Information
  doc.setFontSize(18);
  doc.text('Personal Profile', 20, yPosition);
  yPosition += 10;
  
  doc.setFontSize(12);
  doc.text(`Name: ${data.profile.name}`, 20, yPosition);
  yPosition += 8;
  
  yPosition = addWrappedText(`Interests: ${data.profile.interests}`, 20, yPosition, 170);
  yPosition += 5;
  
  yPosition = addWrappedText(`Academic Background: ${data.profile.academicBackground}`, 20, yPosition, 170);
  yPosition += 15;

  // Career Recommendations
  doc.setFontSize(18);
  doc.text('Recommended Careers', 20, yPosition);
  yPosition += 10;

  data.recommendations.forEach((career, index) => {
    // Check if we need a new page
    if (yPosition > 250) {
      doc.addPage();
      yPosition = 20;
    }

    doc.setFontSize(14);
    doc.text(`${index + 1}. ${career.title} (${career.matchPercentage}% match)`, 20, yPosition);
    yPosition += 8;
    
    doc.setFontSize(10);
    yPosition = addWrappedText(career.description, 25, yPosition, 165, 10);
    yPosition += 5;
    
    doc.text(`Required Skills: ${career.requiredSkills.join(', ')}`, 25, yPosition);
    yPosition += 6;
    
    doc.text(`Average Salary: ${career.averageSalary}`, 25, yPosition);
    yPosition += 12;
  });

  // Check if we need a new page for roadmap
  if (yPosition > 200) {
    doc.addPage();
    yPosition = 20;
  }

  // Skill Roadmap
  doc.setFontSize(18);
  doc.text('4-Week Skill Development Roadmap', 20, yPosition);
  yPosition += 15;

  data.roadmap.forEach((week) => {
    // Check if we need a new page
    if (yPosition > 220) {
      doc.addPage();
      yPosition = 20;
    }

    doc.setFontSize(14);
    doc.text(`Week ${week.week}: ${week.title}`, 20, yPosition);
    yPosition += 8;

    doc.setFontSize(10);
    doc.text('Tasks:', 25, yPosition);
    yPosition += 6;

    week.tasks.forEach((task) => {
      yPosition = addWrappedText(`• ${task}`, 30, yPosition, 160, 10);
      yPosition += 2;
    });

    yPosition += 3;
    doc.text('Resources:', 25, yPosition);
    yPosition += 6;

    week.resources.forEach((resource) => {
      yPosition = addWrappedText(`• ${resource}`, 30, yPosition, 160, 10);
      yPosition += 2;
    });

    yPosition += 10;
  });

  // Footer
  const pageCount = doc.getNumberOfPages();
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i);
    doc.setFontSize(10);
    doc.setTextColor(128, 128, 128);
    doc.text(`Generated by AI Career Advisor - Page ${i} of ${pageCount}`, 20, 285);
    doc.text(`Report Date: ${new Date().toLocaleDateString()}`, 150, 285);
  }

  // Save the PDF
  const fileName = `${data.profile.name.replace(/\s+/g, '_')}_Career_Report.pdf`;
  doc.save(fileName);
};